
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DEC END FOR INC ITER NUMBER STARTstatement : FORstatement : FOR ITERstatement : FOR DEC ITERstatement : FOR START NUMBER END NUMBERstatement : DEC ITER FORstatement : INC ITER FOR'
    
_lr_action_items = {'FOR':([0,8,9,],[2,12,13,]),'DEC':([0,2,],[3,6,]),'INC':([0,],[4,]),'$end':([1,2,5,10,12,13,15,],[0,-1,-2,-3,-5,-6,-4,]),'ITER':([2,3,4,6,],[5,8,9,10,]),'START':([2,],[7,]),'NUMBER':([7,14,],[11,15,]),'END':([11,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> FOR','statement',1,'p_statement_rule1','parser.py',58),
  ('statement -> FOR ITER','statement',2,'p_statement_rule2','parser.py',62),
  ('statement -> FOR DEC ITER','statement',3,'p_statement_rule3','parser.py',66),
  ('statement -> FOR START NUMBER END NUMBER','statement',5,'p_statement_rule4','parser.py',70),
  ('statement -> DEC ITER FOR','statement',3,'p_statement_rule5','parser.py',79),
  ('statement -> INC ITER FOR','statement',3,'p_statement_rule6','parser.py',82),
]
