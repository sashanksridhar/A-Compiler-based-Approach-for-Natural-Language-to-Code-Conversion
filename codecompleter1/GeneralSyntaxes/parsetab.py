
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR CHARACTER FLOAT FLOATER INTEGER NUMBER PRECISION PRINT STRING VARstatement : PRINTstatement : PRINT CHARstatement : PRINT NUMBERstatement : PRINT FLOATstatement : PRINT FLOAT PRECISION NUMBERstatement : PRINT INTEGER VARstatement : PRINT FLOATER VARstatement : PRINT CHARACTER VARstatement : PRINT STRING VARstatement : PRINT STRINGstatement : PRINT VAR'
    
_lr_action_items = {'PRINT':([0,],[2,]),'$end':([1,2,3,4,5,7,10,12,13,14,15,16,],[0,-1,-2,-3,-4,-11,-10,-6,-7,-8,-9,-5,]),'CHAR':([2,],[3,]),'NUMBER':([2,11,],[4,16,]),'FLOAT':([2,],[5,]),'INTEGER':([2,],[6,]),'FLOATER':([2,],[8,]),'CHARACTER':([2,],[9,]),'STRING':([2,],[10,]),'VAR':([2,6,8,9,10,],[7,12,13,14,15,]),'PRECISION':([5,],[11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PRINT','statement',1,'p_statement_rule1','print.py',68),
  ('statement -> PRINT CHAR','statement',2,'p_statement_rule3','print.py',73),
  ('statement -> PRINT NUMBER','statement',2,'p_statement_rule4','print.py',77),
  ('statement -> PRINT FLOAT','statement',2,'p_statement_rule5','print.py',81),
  ('statement -> PRINT FLOAT PRECISION NUMBER','statement',4,'p_statement_rule6','print.py',85),
  ('statement -> PRINT INTEGER VAR','statement',3,'p_statement_rule7','print.py',88),
  ('statement -> PRINT FLOATER VAR','statement',3,'p_statement_rule8','print.py',91),
  ('statement -> PRINT CHARACTER VAR','statement',3,'p_statement_rule9','print.py',94),
  ('statement -> PRINT STRING VAR','statement',3,'p_statement_rule10','print.py',97),
  ('statement -> PRINT STRING','statement',2,'p_statement_rule12','print.py',100),
  ('statement -> PRINT VAR','statement',2,'p_statement_rule11','print.py',103),
]
